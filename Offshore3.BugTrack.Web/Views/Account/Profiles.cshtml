@model Offshore3.BugTrack.ViewModels.ProfileViewModel
@using (Html.BeginForm(
    "Profiles",
    "Account",
    FormMethod.Post,
    new { @class = "form-horizontal" }
    ))
{
    <div id="Profiles">
        <div class="control-group">
            @Html.LabelFor(m => m.UserName, new { @class = "control-label", value = Model.UserName })
            <div class="controls">
                @Html.TextBoxFor(m => m.UserName, new { value = Model.UserName })
                @Html.ValidationMessageFor(m => m.UserName, string.Empty, new { style = "color:red" })
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(m => m.Email, new { disable = "disable", @class = "control-label", value = Model.Email })
            <div class="controls">
                <input type="text" value="@Model.Email" disabled="disabled"/>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(m => m.Password, new { @class = "control-label" })
            <div class="controls">
                @Html.PasswordFor(m => m.Password, new { value = Model.Password })
                @Html.ValidationMessageFor(m => m.Password, string.Empty, new { style = "color:red" })
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(m => m.RepeatPassword, new { @class = "control-label" })
            <div class="controls">
                @Html.PasswordFor(m => m.RepeatPassword, new { value = Model.Password })
                @Html.ValidationMessageFor(m => m.RepeatPassword, string.Empty, new { style = "color:red" })
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(m => m.Gender, new { @class = "control-label" })
            <div class="controls">
                <select id="Gender" name="Gender">
                    <option value="false">Male</option>
                    @if (Model.Gender)
                    {
                        <option selected="selected" value="true">Female</option>
                    }
                    else
                    {
                        <option value="true">Female</option>
                    }
                </select>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(m => m.ImageUrl, new { @class = "control-label" })
            <div class="controls">
                <input type="hidden" name="IsUpdateUserImage" id="IsUpdateUserImage" value="false" />
                <div id="ImageArea">
                    @if (string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <a href="#" id="btnUp">Upload Image</a>
                        <div id="Image"></div>
                    }
                    else
                    {
                        <a href="#" id="btnUp">Reupload？</a>
                        <div id="Image">
                            <img src="@Url.Content(Model.ImageUrl)"/>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(m => m.Introduction, new { @class = "control-label" })
            <div class="controls">
                <textarea name="Introduction" style="visibility: hidden;">
                    @Model.Introduction
                </textarea>
            </div>
        </div>
        <hr />
        <div>
            <button type="submit" class="btn lBtn">Save</button>
            <a class="btn rBtn" href="@Url.Action("Index", "Project")">Cancel</a>
        </div>
    </div>
}

<style>
    .lBtn {
        margin-left: 200px;
    }

    .rBtn {
        margin-left: 200px;
    }
    /*#ImageArea {
        position: absolute;
        width: 200px;
        height: 200px;
        right: 50px;
        top: 50px;
    }*/
    img {
        width: 200px;
        height: 200px;
    }

    #Profiles {
        position: relative;
        border: 1px solid gray;
        margin-left: auto;
        margin-right: auto;
        margin-top: 100px;
        padding-top: 40px;
        width: 700px;
    }

    /*#promptInfo {
        color: red;
        height: 20px;
        text-align: center;
    }*/
</style>
<script>
    var editor;
    KindEditor.ready(function (K) {
        editor = K.create('textarea[name="Introduction"]', {
            resizeType: 1,
            allowPreviewEmoticons: false,
            allowImageUpload: false,
            width: '450px',
            minWidth: '450px',
            items: [
                'fontname', 'fontsize', '|', 'forecolor', 'hilitecolor', 'bold', 'italic', 'underline',
                'removeformat', '|', 'justifyleft', 'justifycenter', 'justifyright', 'insertorderedlist',
                'insertunorderedlist', '|', 'emoticons', 'image', 'link']
        });
    });
    $(function () {
        new AjaxUpload($('#btnUp'), {
            action: '@Url.Action("UserImage", "Upload")',
            name: 'UserImage',
            type: 'POST',
            responseType: 'json',
            onChange: function (file, ext) {
                if (!(ext && /^(jpg|jpeg|JPG|JPEG)$/.test(ext))) {
                    alert('Image format error!', 'System');
                    return false;
                }
            },
            autoSubmit: true,
            onComplete: function (file, response) {
                $('#btnUp').html('Reupload？');
                $('IsUpdateUserImage').val(response.IsUpdateUserImage);
                $('#Image').html(response.ReplaceHtml);
            }
        });
    });
</script>
